// Place your key bindings in this file to override the defaultsauto[]
[
    // https://marketplace.visualstudio.com/items?itemName=Tyriar.shell-launcher
    {
        "key": "ctrl+shift+T",
        "command": "shellLauncher.launch"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.new"
    },
    // Toggle between terminal and editor focus
    {
        "key": "ctrl+[Backquote]",
        "command": "workbench.action.terminal.focus"
    },
    {
        "key": "ctrl+[Backquote]",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    // Switch to next/previous/Nth terminal (N=1-9)
    {
        "key": "ctrl+k ctrl+shift+n",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+shift+p",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+1",
        "command": "workbench.action.terminal.focusAtIndex1",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+2",
        "command": "workbench.action.terminal.focusAtIndex2",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+3",
        "command": "workbench.action.terminal.focusAtIndex3",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+4",
        "command": "workbench.action.terminal.focusAtIndex4",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+5",
        "command": "workbench.action.terminal.focusAtIndex5",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+6",
        "command": "workbench.action.terminal.focusAtIndex6",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+7",
        "command": "workbench.action.terminal.focusAtIndex7",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+8",
        "command": "workbench.action.terminal.focusAtIndex8",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+9",
        "command": "workbench.action.terminal.focusAtIndex9",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-search.action.replace",
        "when": "matchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-search.action.replaceAllInFile",
        "when": "fileMatchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-search.action.replaceAllInFolder",
        "when": "folderMatchFocus && replaceActive && searchViewletVisible"
    },
    // Emulate spyder run and execute selection
    {
        "key": "F5",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
          "text": "run '${file}'"
        }
    },
    {
        "key": "F9",
        "command": "macros.executeSelection"
    },
	// Reassign shortcuts so that we can add a new line in IPython with
	// Ctrl+J, Ctrl+Q
	{
		"key": "ctrl+alt+j",
		"command": "workbench.action.togglePanel"
	},
    {
		"key": "ctrl+q",
		"command": "-workbench.action.quit"
    },
    // Sometimes the debugger session cannot use all the python features
    // see https://github.com/inducer/pudb/issues/103
    // extract the caller enviroment
    // pip install git+https://github.com/andyljones/aljpy
    {
        "key": "ctrl+q",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
          "text": "from aljpy.debugging import extract; extract()\n"
        }
    },
	{
		"key": "ctrl+j",
		"command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+shift+f5",
        "command": "workbench.action.files.revert"
    },
    // inspect token type (useful when customizing syntax highlighting)
    {
        "key": "cmd+alt+shift+i",
        "command": "editor.action.inspectTMScopes"
    },
    // tmux keybindings, note some are keyboard-layout dependent.
    // activate them only when we are not in the terminal so that we can keep on
    // using tmux there.
    {
        // ctrl+b "
        "key": "ctrl+b shift+'",
        "command": "workbench.action.splitEditorDown",
        "when": "!terminalFocus"
    },
    {
        // ctrl+b %
        "key": "ctrl+b shift+5",
        "command": "workbench.action.splitEditorRight",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+b left",
        "command": "workbench.action.navigateLeft",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+b right",
        "command": "workbench.action.navigateRight",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+b up",
        "command": "workbench.action.navigateUp",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+b down",
        "command": "workbench.action.navigateDown",
        "when": "!terminalFocus"
    },
    // custom increase/decrease
    {
        "key": "ctrl+b ctrl+n",
        "command": "workbench.action.increaseViewSize"
    },
    {
        "key": "ctrl+b ctrl+m",
        "command": "workbench.action.decreaseViewSize"
    },
    // remove all ctrl+b keybindings to use tmux shortcuts
    {
        "key": "ctrl+b",
        "command": "-markdown.extension.editing.toggleBold",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    // reassign ctrl+b -> ctrl+shift+b to use tmux shortcuts
    {
        "key": "ctrl+shift+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+shift+b",
        "command": "-workbench.action.tasks.build"
    }
]
